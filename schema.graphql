enum KycStatusEnum {
  approved
  in_progress
  rejected
}

type Mutation {
  updateKycStatus(
    """
    Parameters for UpdateKycStatus
    """
    input: UpdateKycStatusInput!
  ): UpdateKycStatusPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Profile {
  cidOrPassport: String!
  id: ID!
  kycStatus: KycStatusEnum!
}

type Query {
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    skip: Int
  ): UserConnection!
}

input UpdateKycStatusAttributes {
  kycStatus: KycStatusEnum!
  userId: Int!
}

"""
Autogenerated input type of UpdateKycStatus
"""
input UpdateKycStatusInput {
  attributes: UpdateKycStatusAttributes!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of UpdateKycStatus
"""
type UpdateKycStatusPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  user: User
}

type User {
  emailAddress: String!
  id: ID!
  name: String!
  phoneNumber: String!
  profile: Profile!
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]

  """
  A list of nodes.
  """
  nodes: [User]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User
}
